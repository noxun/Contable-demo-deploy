import { z } from "zod"

export const SubDataResponseSchema = z.object({
  id: z.number(),
  label: z.string(),
  description: z.string(),
  description2: z.string(),
  description3: z.null(),
  description4: z.null(),
  description5: z.null(),
  refVoucherEgressId: z.null(),
  refVoucherEgressItemId: z.null(),
  observation: z.null(),
  stringValue: z.null(),
  numberValue: z.number(),
  recibo: z.boolean(),
  order: z.null(),
  details: z.null(),
  dataSet: z.object({
    id: z.number(),
    value: z.null(),
    numberValue: z.null(),
    filled: z.boolean(),
    procedure: z.object({
      id: z.number(),
      name: z.string(),
      number: z.number(),
      correlative1: z.number(),
      correlative2: z.null(),
      correlative3: z.null(),
      step: z.number(),
      city: z.null(),
      formCompleted: z.boolean(),
      lended: z.boolean(),
      year: z.number(),
      company: z.object({
        id: z.number(),
        razonSocial: z.string(),
        nit: z.string(),
        logoUrl: z.null(),
        status: z.string(),
        code: z.null(),
        num: z.string(),
        interno: z.string(),
        importador: z.null(),
        direccion: z.string(),
        ci: z.string(),
        testimonio: z.null(),
        fundempresa: z.string(),
        email: z.string(),
        phone: z.string(),
        cicoin: z.null(),
        suma: z.null(),
        croquis: z.null(),
        foto: z.null(),
        fechaApertura: z.null(),
        gps: z.string(),
        categoria: z.string(),
        web: z.string(),
        sigla: z.null(),
        tipoCliente: z.null(),
        pais: z.null(),
        departamento: z.null(),
        ciudad: z.string(),
        domicilioLegal: z.null(),
        clasificacionCliente: z.null(),
        actividad: z.null(),
        pagaTributos: z.null(),
        descripcionNegocio: z.null(),
        details: z.null(),
        commercialActivity: z.string(),
        institution: z.null(),
        accountCode: z.null(),
        users: z.null(),
        userCompanys: z.null(),
        legalRepresentatives: z.null(),
        files: z.null(),
        procedures: z.array(z.unknown()),
        airGuides: z.null(),
        contacts: z.null(),
        companyDetails: z.null(),
        creationDate: z.string(),
        deleteDate: z.string(),
        updateDate: z.string(),
        creationUserId: z.number(),
        updateUserId: z.number()
      }),
      companyId: z.number(),
      procedureType: z.null(),
      procedureTypeId: z.number(),
      dataSets: z.array(z.unknown()),
      subProcedures: z.null(),
      providers: z.null(),
      invoices: z.null(),
      itemMinimalDescriptions: z.null(),
      files: z.null(),
      procedureHistories: z.null(),
      itemProcedures: z.null(),
      items: z.null(),
      loans: z.null(),
      procedureTracks: z.null(),
      lotProcedures: z.null(),
      expenses: z.null(),
      orderItems: z.null(),
      procElements: z.null(),
      category: z.null(),
      fatherProcedure: z.null(),
      fatherProcedureId: z.null(),
      fromItemId: z.null(),
      num: z.number(),
      carpeta: z.null(),
      invoiceId: z.number(),
      totalSheet: z.number(),
      totalInvoice: z.number(),
      totalProcedure: z.number(),
      url1: z.null(),
      url2: z.null(),
      simpleDispatch: z.boolean(),
      status: z.null(),
      registerDate: z.null(),
      creationDate: z.string(),
      deleteDate: z.string(),
      updateDate: z.string(),
      creationUserId: z.number(),
      updateUserId: z.number(),
      deleteUserId: z.number()
    }),
    procedureId: z.number(),
    field: z.object({
      id: z.number(),
      name: z.string(),
      initial: z.string(),
      validate: z.boolean(),
      type: z.string(),
      label: z.string(),
      unique: z.boolean(),
      url: z.string(),
      clientTable: z.boolean(),
      requiredSubLink: z.boolean(),
      allowModification: z.boolean(),
      autoGenerated: z.boolean(),
      format: z.string(),
      urlGroup: z.null(),
      tag: z.null(),
      details: z.null(),
      fieldProcessSteps: z.null(),
      fieldParams: z.null(),
      dataSets: z.array(
        z.object({
          id: z.number(),
          value: z.string(),
          numberValue: z.null(),
          filled: z.boolean(),
          procedure: z.object({
            id: z.number(),
            name: z.string(),
            number: z.number(),
            correlative1: z.number(),
            correlative2: z.null(),
            correlative3: z.null(),
            step: z.number(),
            city: z.null(),
            formCompleted: z.boolean(),
            lended: z.boolean(),
            year: z.number(),
            company: z.null(),
            companyId: z.number(),
            procedureType: z.null(),
            procedureTypeId: z.number(),
            dataSets: z.array(z.unknown()),
            subProcedures: z.null(),
            providers: z.null(),
            invoices: z.null(),
            itemMinimalDescriptions: z.null(),
            files: z.null(),
            procedureHistories: z.null(),
            itemProcedures: z.null(),
            items: z.null(),
            loans: z.null(),
            procedureTracks: z.null(),
            lotProcedures: z.null(),
            expenses: z.null(),
            orderItems: z.null(),
            procElements: z.null(),
            category: z.null(),
            fatherProcedure: z.null(),
            fatherProcedureId: z.null(),
            fromItemId: z.null(),
            num: z.number(),
            carpeta: z.null(),
            invoiceId: z.number(),
            totalSheet: z.number(),
            totalInvoice: z.number(),
            totalProcedure: z.number(),
            url1: z.null(),
            url2: z.null(),
            simpleDispatch: z.boolean(),
            status: z.null(),
            registerDate: z.null(),
            creationDate: z.string(),
            deleteDate: z.string(),
            updateDate: z.string(),
            creationUserId: z.number(),
            updateUserId: z.number(),
            deleteUserId: z.number()
          }),
          procedureId: z.number(),
          fieldId: z.number(),
          order: z.null(),
          files: z.null(),
          fileStates: z.null(),
          subDatas: z.array(
            z.object({
              id: z.number(),
              label: z.string(),
              description: z.string(),
              description2: z.string(),
              description3: z.null(),
              description4: z.null(),
              description5: z.null(),
              refVoucherEgressId: z.null(),
              refVoucherEgressItemId: z.null(),
              observation: z.string(),
              stringValue: z.null(),
              numberValue: z.number(),
              recibo: z.boolean(),
              order: z.null(),
              details: z.null(),
              dataSetId: z.number(),
              endDate: z.null(),
              creationDate: z.string(),
              deleteDate: z.string(),
              updateDate: z.string(),
              creationUserId: z.number(),
              updateUserId: z.number(),
              deleteUserId: z.number()
            })
          ),
          dataSetHistoryColl: z.null(),
          creationDate: z.string(),
          deleteDate: z.string(),
          updateDate: z.string(),
          creationUserId: z.number(),
          updateUserId: z.number(),
          deleteUserId: z.number()
        })
      ),
      fieldMailParams: z.null(),
      subFields: z.null(),
      mainFields: z.null(),
      dropdownListId: z.number(),
      fatherFieldId: z.null(),
      creationDate: z.string(),
      deleteDate: z.string(),
      updateDate: z.string(),
      creationUserId: z.number(),
      updateUserId: z.number()
    }),
    fieldId: z.number(),
    order: z.null(),
    files: z.null(),
    fileStates: z.null(),
    subDatas: z.array(z.unknown()),
    dataSetHistoryColl: z.array(
      z.object({
        id: z.number(),
        dataSetId: z.number(),
        processStepRef: z.null(),
        processStepId: z.number(),
        userRef: z.null(),
        userId: z.number(),
        valueCurrent: z.string(),
        valueBefore: z.null(),
        description: z.string(),
        creationDate: z.string(),
        updateDate: z.string(),
        deleteDate: z.string(),
        creationUserId: z.number(),
        updateUserId: z.number(),
        deleteUserId: z.number()
      })
    ),
    creationDate: z.string(),
    deleteDate: z.string(),
    updateDate: z.string(),
    creationUserId: z.number(),
    updateUserId: z.number(),
    deleteUserId: z.number()
  }),
  dataSetId: z.number(),
  endDate: z.null(),
  creationDate: z.string(),
  deleteDate: z.string(),
  updateDate: z.string(),
  creationUserId: z.number(),
  updateUserId: z.number(),
  deleteUserId: z.number()
})

export type SubDataResponse = z.infer<typeof SubDataResponseSchema>;